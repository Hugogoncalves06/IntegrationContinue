services:
  mysql:
    image: mysql:8
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=users_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=mysql
      - MYSQL_ROOT_PASSWORD=password
    depends_on:
      - mysql

  api:
    image: hugogoncalves06/ci_cd_backend_flask_ynov:latest
    ports:
      - "8000:8000"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=users_db
      - FLASK_ENV=development
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
      
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_PYTHON_API
    depends_on:
      - api
  
  api-nodejs:
    image: hugogoncalves06/ci_cd_nodejs_api_ynov:latest
    environment:
      - NODE_ENV=development
      - PORT=8080
      - MONGODB_URI=mongodb://mongo:27017/blog-api
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    ports:
      - "8080:8080"
    depends_on:
      - mongo

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=blog-api
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  mongo_data: